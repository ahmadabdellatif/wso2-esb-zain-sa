<?xml version="1.0" encoding="UTF-8"?>
<sequence name="ResponseMappingSQ" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <property expression="$axis2:HTTP_SC" name="httpStatusCode" scope="default" type="STRING"/>
    <property expression="json-eval($)" name="responseBody" scope="default" type="STRING"/>
    <log>
        <property expression="get-property('httpStatusCode')" name="HTTPSTATUSCODE"/>
        <property expression="get-property('responseBody')" name="BODY"/>
    </log>
    <switch source="get-property('httpStatusCode')">
        <case regex="200">
            <payloadFactory media-type="json">
                <format>{&#xd;
				"is_successful": true,&#xd;
				"data": $1,&#xd;
				"message": "Authentication accepted",&#xd;
				"errors": [],&#xd;
				"response_code": $2}&#xd;
				</format>
                <args>
                    <arg evaluator="xml" expression="get-property('responseBody')"/>
                    <arg evaluator="xml" expression="get-property('httpStatusCode')"/>
                </args>
            </payloadFactory>
        </case>
        <case regex="400">
            <property expression="json-eval($.message)" name="message" scope="default" type="STRING"/>
            <payloadFactory media-type="json">
                <format>{&#xd;
				"is_successful": false,&#xd;
				"message": "$2",&#xd;
				"errors": $1,&#xd;
				"response_code": $3,&#xd;
				"data": []}&#xd;
				</format>
                <args>
                    <arg evaluator="xml" expression="get-property('responseBody')"/>
                    <arg evaluator="xml" expression="get-property('message')"/>
                    <arg evaluator="xml" expression="get-property('httpStatusCode')"/>
                </args>
            </payloadFactory>
        </case>
        <case regex="401">
            <property expression="json-eval($.message)" name="message" scope="default" type="STRING"/>
            <payloadFactory media-type="json">
                <format>{&#xd;
				"is_successful": false,&#xd;
				"message": "$2",&#xd;
				"errors": $1,&#xd;
				"response_code": $3,&#xd;
				"data": []}&#xd;
				</format>
                <args>
                    <arg evaluator="xml" expression="get-property('responseBody')"/>
                    <arg evaluator="xml" expression="get-property('message')"/>
                    <arg evaluator="xml" expression="get-property('httpStatusCode')"/>
                </args>
            </payloadFactory>
        </case>
        <case regex="404">
            <property expression="json-eval($.message)" name="message" scope="default" type="STRING"/>
            <payloadFactory media-type="json">
                <format>{&#xd;
				"is_successful": false,&#xd;
				"message": "$2",&#xd;
				"errors": $1,&#xd;
				"response_code": $3,&#xd;
				"data": []}&#xd;
				</format>
                <args>
                    <arg evaluator="xml" expression="get-property('responseBody')"/>
                    <arg evaluator="xml" expression="get-property('message')"/>
                    <arg evaluator="xml" expression="get-property('httpStatusCode')"/>
                </args>
            </payloadFactory>
        </case>
        <case regex="500">
            <property expression="json-eval($.message)" name="message" scope="default" type="STRING"/>
            <payloadFactory media-type="json">
                <format>{&#xd;
					"is_successful": false,&#xd;
					"message": "$2",&#xd;
					"errors": $1,&#xd;
					"response_code": $3,&#xd;
					"data": []}&#xd;
				</format>
                <args>
                    <arg evaluator="xml" expression="get-property('responseBody')"/>
                    <arg evaluator="xml" expression="get-property('message')"/>
                    <arg evaluator="xml" expression="get-property('httpStatusCode')"/>
                </args>
            </payloadFactory>
        </case>
        <default>
            <payloadFactory media-type="text">
                <format>"Error undefined"</format>
                <args/>
            </payloadFactory>
            <log>
                <property name="ERROR" value="Error undefined"/>
            </log>
        </default>
    </switch>
</sequence>
